<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.taosdata.github.dao.GithubIndicatorMapper">
  <resultMap id="BaseResultMap" type="com.taosdata.github.domain.GithubIndicator">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="userId" jdbcType="VARCHAR" property="userId" />
    <result column="projectName" jdbcType="VARCHAR" property="projectName" />
    <result column="watch" jdbcType="INTEGER" property="watch" />
    <result column="star" jdbcType="INTEGER" property="star" />
    <result column="issues" jdbcType="INTEGER" property="issues" />
    <result column="fork" jdbcType="INTEGER" property="fork" />
    <result column="fetchTime" jdbcType="TIMESTAMP" property="fetchTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, userId, projectName, watch, star, issues, fork, fetchTime
  </sql>
  <select id="selectByExample" parameterType="com.taosdata.github.domain.GithubIndicatorExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from td_github
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from td_github
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from td_github
    where id = #{id,jdbcType=BIGINT}
  </delete>

  <select id="selectMaxByDay" resultMap="BaseResultMap">
      SELECT
        userId, projectName, fetchTime, max(watch) as watch, max(star) as star, max(issues) as issues, max(fork) as fork
    from (
        SELECT 
          userId, projectName, watch, star, issues, fork, DATE_FORMAT(fetchTime,'%Y-%m-%d') as fetchTime
        FROM
        td_github 
        where 
            userId = #{userId}
        and projectName = #{projectName}
        and fetchTime &gt;= #{startDate}
        and fetchTime <![CDATA[ < ]]>  #{endDate}
    ) a 
    GROUP BY userId, projectName, fetchTime
    order by fetchTime asc
  </select>


  <delete id="deleteByExample" parameterType="com.taosdata.github.domain.GithubIndicatorExample">
    delete from td_github
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.taosdata.github.domain.GithubIndicator" useGeneratedKeys="true">
    insert into td_github (userId, projectName, watch, 
      star, issues, fork, 
      fetchTime)
    values (#{userId,jdbcType=VARCHAR}, #{projectName,jdbcType=VARCHAR}, #{watch,jdbcType=INTEGER}, 
      #{star,jdbcType=INTEGER}, #{issues,jdbcType=INTEGER}, #{fork,jdbcType=INTEGER}, 
      #{fetchTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.taosdata.github.domain.GithubIndicator" useGeneratedKeys="true">
    insert into td_github
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        userId,
      </if>
      <if test="projectName != null">
        projectName,
      </if>
      <if test="watch != null">
        watch,
      </if>
      <if test="star != null">
        star,
      </if>
      <if test="issues != null">
        issues,
      </if>
      <if test="fork != null">
        fork,
      </if>
      <if test="fetchTime != null">
        fetchTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="projectName != null">
        #{projectName,jdbcType=VARCHAR},
      </if>
      <if test="watch != null">
        #{watch,jdbcType=INTEGER},
      </if>
      <if test="star != null">
        #{star,jdbcType=INTEGER},
      </if>
      <if test="issues != null">
        #{issues,jdbcType=INTEGER},
      </if>
      <if test="fork != null">
        #{fork,jdbcType=INTEGER},
      </if>
      <if test="fetchTime != null">
        #{fetchTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.taosdata.github.domain.GithubIndicatorExample" resultType="java.lang.Long">
    select count(*) from td_github
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update td_github
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null">
        userId = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.projectName != null">
        projectName = #{record.projectName,jdbcType=VARCHAR},
      </if>
      <if test="record.watch != null">
        watch = #{record.watch,jdbcType=INTEGER},
      </if>
      <if test="record.star != null">
        star = #{record.star,jdbcType=INTEGER},
      </if>
      <if test="record.issues != null">
        issues = #{record.issues,jdbcType=INTEGER},
      </if>
      <if test="record.fork != null">
        fork = #{record.fork,jdbcType=INTEGER},
      </if>
      <if test="record.fetchTime != null">
        fetchTime = #{record.fetchTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update td_github
    set id = #{record.id,jdbcType=BIGINT},
      userId = #{record.userId,jdbcType=VARCHAR},
      projectName = #{record.projectName,jdbcType=VARCHAR},
      watch = #{record.watch,jdbcType=INTEGER},
      star = #{record.star,jdbcType=INTEGER},
      issues = #{record.issues,jdbcType=INTEGER},
      fork = #{record.fork,jdbcType=INTEGER},
      fetchTime = #{record.fetchTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.taosdata.github.domain.GithubIndicator">
    update td_github
    <set>
      <if test="userId != null">
        userId = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="projectName != null">
        projectName = #{projectName,jdbcType=VARCHAR},
      </if>
      <if test="watch != null">
        watch = #{watch,jdbcType=INTEGER},
      </if>
      <if test="star != null">
        star = #{star,jdbcType=INTEGER},
      </if>
      <if test="issues != null">
        issues = #{issues,jdbcType=INTEGER},
      </if>
      <if test="fork != null">
        fork = #{fork,jdbcType=INTEGER},
      </if>
      <if test="fetchTime != null">
        fetchTime = #{fetchTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.taosdata.github.domain.GithubIndicator">
    update td_github
    set userId = #{userId,jdbcType=VARCHAR},
      projectName = #{projectName,jdbcType=VARCHAR},
      watch = #{watch,jdbcType=INTEGER},
      star = #{star,jdbcType=INTEGER},
      issues = #{issues,jdbcType=INTEGER},
      fork = #{fork,jdbcType=INTEGER},
      fetchTime = #{fetchTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>